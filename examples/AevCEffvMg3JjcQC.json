{
  "createdAt": "2025-07-14T19:06:41.924Z",
  "updatedAt": "2025-07-14T19:06:41.924Z",
  "id": "AevCEffvMg3JjcQC",
  "name": "Telegram_Messaging_Agent_for_Text_Audio_Images",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "5fe3c0d8-bd61-4943-b152-9e6315134520",
              "operator": {
                "name": "filter.operator.equals",
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $('Listen for Telegram Events').item.json.body.message.from.first_name }}",
              "rightValue": "={{ $json.first_name }}"
            },
            {
              "id": "98a0ea91-0567-459c-bbce-06abc14a49ce",
              "operator": {
                "name": "filter.operator.equals",
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $('Listen for Telegram Events').item.json.body.message.from.last_name }}",
              "rightValue": "={{ $json.last_name }}"
            },
            {
              "id": "18a96c1f-f2a0-4a2a-b789-606763df4423",
              "operator": {
                "type": "number",
                "operation": "equals"
              },
              "leftValue": "={{ $('Listen for Telegram Events').item.json.body.message.from.id }}",
              "rightValue": "={{ $json.id }}"
            }
          ]
        },
        "looseTypeValidation": "=",
        "options": {}
      },
      "id": "d142415e-0d40-4130-993e-00303fffe428",
      "name": "Check User & Chat ID",
      "type": "n8n-nodes-base.if",
      "position": [
        1040,
        620
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "chatId": "={{ $json.body.message.chat.id }}",
        "text": "=Unable to process your message.",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "c20194ef-8d42-46fc-8fd2-40d804948577",
      "name": "Error message",
      "type": "n8n-nodes-base.telegram",
      "position": [
        1260,
        900
      ],
      "typeVersion": 1.2,
      "webhookId": "f0d8545d-bf7d-48a2-9a42-8c83e8a09eca"
    },
    {
      "parameters": {
        "content": "# Receive Telegram Message with Webhook",
        "height": 652,
        "width": 929
      },
      "id": "6247f378-095f-4ac7-a11b-f6d8e493eadf",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        560,
        440
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "your-endpoint",
        "options": {
          "binaryPropertyName": "data"
        }
      },
      "id": "94b6be60-de5a-4d38-8740-9ee690c34a67",
      "name": "Listen for Telegram Events",
      "type": "n8n-nodes-base.webhook",
      "position": [
        620,
        620
      ],
      "webhookId": "b4ed4c80-a655-4ff2-87d6-febd5280d343",
      "typeVersion": 2
    },
    {
      "parameters": {
        "url": "=https://api.telegram.org/{{ $json.token }}/setWebhook",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "url",
              "value": "={{ $json.test_url }}"
            }
          ]
        },
        "options": {}
      },
      "id": "0f0399e6-9019-4d21-b8ba-9ca411c3c925",
      "name": "Set Webhook Test URL",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1200,
        200
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "content": "# Telegram Webhook Tools\n\n## Setting your Telegram Bot WebHook the Easy Way\n",
        "height": 532,
        "width": 1638,
        "color": 3
      },
      "id": "c8d64cc8-b12a-42f4-93c6-d06aad692667",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        560,
        -120
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "url": "=https://api.telegram.org/{{ $json.token }}/getWebhookInfo",
        "options": {}
      },
      "id": "df6f100e-597c-4324-9d92-1c2420ca8a66",
      "name": "Get Telegram Webhook Info",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        700,
        200
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "content": "# Process Audio",
        "height": 429,
        "width": 1113,
        "color": 4
      },
      "id": "3d0649c9-3679-4cd1-8694-a94455168b32",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1520,
        440
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "17989eb0-feca-4631-b5c8-34b1d4a6c72b",
              "name": "image_file_id",
              "type": "string",
              "value": "={{ $json.body.message.photo.last().file_id }}"
            },
            {
              "id": "9317d7ae-dffd-4b1f-9a9c-b3cc4f1e0dd3",
              "name": "caption",
              "type": "string",
              "value": "={{ $json.body.message.caption }}"
            }
          ]
        },
        "options": {}
      },
      "id": "83e5e143-a4a8-4b6c-9e1d-044460166ad9",
      "name": "Image Schema",
      "type": "n8n-nodes-base.set",
      "position": [
        1600,
        1520
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "content": "# Process Image",
        "height": 432,
        "width": 1289,
        "color": 6
      },
      "id": "10ed8700-59d8-4f53-800b-17f138948821",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1520,
        1360
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "# How to set up a Telegram Bot WebHook\n\n## WebHook Setup Process\n\n**Basic Concept**\nA WebHook allows your Telegram bot to automatically receive updates instead of manually polling the Bot API.\n\n**Setup Method**\nTo set a WebHook, make a GET request using this URL format:\n```\nhttps://api.telegram.org/bot{my_bot_token}/setWebhook?url={url_to_send_updates_to}\n```\nWhere:\n- `my_bot_token`: Your bot token from BotFather\n- `url_to_send_updates_to`: Your HTTPS endpoint that handles bot updates\n\n\n**Verification**\nTo verify the WebHook setup, use:\n```\nhttps://api.telegram.org/bot{my_bot_token}/getWebhookInfo\n```\n\nA successful response looks like:\n```json\n{\n \"ok\": true,\n \"result\": {\n   \"url\": \"https://www.example.com/my-telegram-bot/\",\n   \"has_custom_certificate\": false,\n   \"pending_update_count\": 0,\n   \"max_connections\": 40\n }\n}\n```\n\n\nThis method provides a simple and efficient way to handle Telegram bot updates automatically through webhooks rather than manual polling.",
        "height": 860,
        "width": 800,
        "color": 7
      },
      "id": "81dc0651-eff8-4d48-a3a9-0513518e5e6c",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -260,
        -120
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "c2b86767-c7ce-433d-8444-b5d4548eb335",
      "name": "gpt-4o-mini",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        2020,
        720
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.body.message.voice.file_id }}"
      },
      "id": "29d0509f-6e09-4b71-ae03-43b5ef4cad71",
      "name": "Get Audio File",
      "type": "n8n-nodes-base.telegram",
      "position": [
        1600,
        560
      ],
      "typeVersion": 1.2,
      "webhookId": "49bd66d3-6ef3-4341-9689-c9c90865ac80"
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.image_file_id }}"
      },
      "id": "c010e103-3e63-4b68-8141-5eff5c46052b",
      "name": "Get Image",
      "type": "n8n-nodes-base.telegram",
      "position": [
        1800,
        1520
      ],
      "typeVersion": 1.2,
      "webhookId": "a39a06bb-1abb-44fa-a702-938a3b9e866b"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini",
          "cachedResultName": "GPT-4O-MINI"
        },
        "inputType": "base64",
        "options": {}
      },
      "id": "8cec9d9d-df2c-4ec1-bd28-16f7ab1c707f",
      "name": "Analyze Image",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "position": [
        2400,
        1520
      ],
      "typeVersion": 1.6
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "binaryPropertyName": "=data",
        "options": {}
      },
      "id": "c8a4e95f-83c9-4447-b99a-a707d3dcbe94",
      "name": "Transcribe Recording",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "position": [
        1800,
        560
      ],
      "typeVersion": 1.6
    },
    {
      "parameters": {
        "content": "# Process Text",
        "height": 429,
        "width": 1113,
        "color": 5
      },
      "id": "2df595a0-9351-474d-8098-2ad042735dc4",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1520,
        900
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "3f834826-b540-47bb-891e-3a4a2cc3073e",
      "name": "gpt-4o-mini1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        2020,
        1180
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "chatId": "=1234567891",
        "text": "={{ $json.description }} for Testing",
        "additionalFields": {}
      },
      "id": "0ce116f2-0d56-4efb-a0cd-00fb9e8701aa",
      "name": "Test Webhook Status",
      "type": "n8n-nodes-base.telegram",
      "position": [
        1400,
        200
      ],
      "typeVersion": 1.2,
      "webhookId": "569903aa-853e-471d-9e88-e475bc3372bf"
    },
    {
      "parameters": {
        "chatId": "=1234567891",
        "text": "={{ $json.description }} for Production",
        "additionalFields": {}
      },
      "id": "5627af3b-b11d-432f-a14b-c1a0027bb5ae",
      "name": "Production Webhook Status",
      "type": "n8n-nodes-base.telegram",
      "position": [
        1920,
        200
      ],
      "typeVersion": 1.2,
      "webhookId": "66a27b2e-263b-4c18-b5c9-59ad7b70cf0d"
    },
    {
      "parameters": {
        "url": "=https://api.telegram.org/{{ $json.token }}/setWebhook",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "url",
              "value": "={{ $json.production_url }}"
            }
          ]
        },
        "options": {}
      },
      "id": "2b435870-5b4a-4a24-a888-509a242b1471",
      "name": "Set Webhook Production URL",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1720,
        200
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b37b48ba-8fef-4e6c-bbca-73e6c2e1e0a8",
              "name": "text",
              "type": "string",
              "value": "={{ $json.body.message.text }}"
            }
          ]
        },
        "options": {}
      },
      "id": "01117943-275a-490a-93f3-0508c92e961f",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "position": [
        1800,
        1020
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "chatId": "={{ $('Listen for Telegram Events').item.json.body.message.chat.id }}",
        "text": "=Task message: <i>{{ $json.text }}</i>",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "6c139c25-dd9f-43c9-b1b9-0205be049f34",
      "name": "Audio Task Message",
      "type": "n8n-nodes-base.telegram",
      "position": [
        2400,
        500
      ],
      "typeVersion": 1.2,
      "webhookId": "5fcf316f-780e-4df9-b0d6-76baa04a26af"
    },
    {
      "parameters": {
        "chatId": "={{ $('Listen for Telegram Events').item.json.body.message.chat.id }}",
        "text": "=Other message: <i>{{ $json.text }}</i>",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "d4f1d26a-5986-4462-a820-4992e98b4cf6",
      "name": "Audio Other Message",
      "type": "n8n-nodes-base.telegram",
      "position": [
        2400,
        680
      ],
      "typeVersion": 1.2,
      "webhookId": "e768b56d-5e3a-4339-bebb-2971326b5dda"
    },
    {
      "parameters": {
        "chatId": "={{ $('Listen for Telegram Events').item.json.body.message.chat.id }}",
        "text": "=Task message: <i>{{ $json.text }}</i>",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "e52df37b-9a2f-4717-b687-0dd58fbf8c66",
      "name": "Text Task Message",
      "type": "n8n-nodes-base.telegram",
      "position": [
        2400,
        960
      ],
      "typeVersion": 1.2,
      "webhookId": "2fa51960-6a84-4bfd-a5ec-e4a691a07145"
    },
    {
      "parameters": {
        "chatId": "={{ $('Listen for Telegram Events').item.json.body.message.chat.id }}",
        "text": "=Other message: <i>{{ $json.text }}</i>",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "a03009e5-a252-42b2-b8ee-e3717eb516ac",
      "name": "Text Other Message",
      "type": "n8n-nodes-base.telegram",
      "position": [
        2400,
        1140
      ],
      "typeVersion": 1.2,
      "webhookId": "bd939867-1491-4176-a9c7-21376c5f4266"
    },
    {
      "parameters": {
        "chatId": "={{ $('Listen for Telegram Events').item.json.body.message.chat.id }}",
        "text": "={{ $json.content }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "65662dc4-d541-4420-965c-8aeadb28b840",
      "name": "Image Message",
      "type": "n8n-nodes-base.telegram",
      "position": [
        2600,
        1520
      ],
      "typeVersion": 1.2,
      "webhookId": "45673cc4-c65a-46c1-b4ff-94a04028bc0c"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data",
        "options": {
          "fileName": "={{ $json.result.file_path }}"
        }
      },
      "id": "f8e81867-843f-4653-986d-05cfe99d99d4",
      "name": "Convert to Image File",
      "type": "n8n-nodes-base.convertToFile",
      "position": [
        2200,
        1520
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "operation": "binaryToPropery",
        "options": {}
      },
      "id": "42645b2a-2976-48b1-937b-236546d9c0a3",
      "name": "Extract from File to Base64",
      "type": "n8n-nodes-base.extractFromFile",
      "position": [
        2000,
        1520
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "inputText": "={{ $json.text }}",
        "categories": {
          "categories": [
            {
              "category": "task",
              "description": "If the message is about about creating a task/todo"
            },
            {
              "category": "other",
              "description": "If the message is not about creating a task/todo "
            }
          ]
        },
        "options": {}
      },
      "id": "ca1a2506-1533-4f7b-b283-252d00598e76",
      "name": "Text Classifier Audio",
      "type": "@n8n/n8n-nodes-langchain.textClassifier",
      "position": [
        2000,
        560
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "inputText": "={{ $json.text }}",
        "categories": {
          "categories": [
            {
              "category": "task",
              "description": "If the message is about about creating a task/todo"
            },
            {
              "category": "other",
              "description": "If the message is not about creating a task/todo "
            }
          ]
        },
        "options": {}
      },
      "id": "20dd6ec9-2f6a-4a5b-8fb1-3092cd64008d",
      "name": "Text Classifier",
      "type": "@n8n/n8n-nodes-langchain.textClassifier",
      "position": [
        2000,
        1020
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "87811892-85f5-4578-a149-3edd94d3815a",
              "name": "token",
              "type": "string",
              "value": "bot[your-telegram-bot-token]"
            },
            {
              "id": "d2b9ab83-44ad-4741-aac9-1feed974c015",
              "name": "test_url",
              "type": "string",
              "value": "https://[your-url]/webhook-test/[your-endpoint]"
            },
            {
              "id": "0c671fbf-aa2c-42ef-9e8b-398ac38358d0",
              "name": "production_url",
              "type": "string",
              "value": "https://[your-url]/webhook/[your-endpoint]"
            }
          ]
        },
        "options": {}
      },
      "id": "8826c6ca-2e8a-4068-8d8d-d04dadc4aea8",
      "name": "Telegram Token & Webhooks",
      "type": "n8n-nodes-base.set",
      "position": [
        1320,
        -80
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "chatId": "=1234567891",
        "text": "={{ JSON.stringify($json.result, null, 2)  }}",
        "additionalFields": {}
      },
      "id": "f5002c64-f4f1-4646-8b2b-ce57ff5ec716",
      "name": "Get Webhook Status",
      "type": "n8n-nodes-base.telegram",
      "position": [
        900,
        200
      ],
      "typeVersion": 1.2,
      "webhookId": "18af1cc0-e47a-4593-95cf-df1d29cdf632"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0cea6da1-652a-4c1e-94c3-30608ced90f8",
              "name": "first_name",
              "type": "string",
              "value": "First Name"
            },
            {
              "id": "b90280c6-3e36-49ca-9e7e-e15c42d256cc",
              "name": "last_name",
              "type": "string",
              "value": "Last Name"
            },
            {
              "id": "f6d86283-16ca-447e-8427-7d3d190babc0",
              "name": "id",
              "type": "number",
              "value": 12345678999
            }
          ]
        },
        "options": {}
      },
      "id": "e23b7182-6cd7-4b2e-809f-1751ce34d25a",
      "name": "Validation",
      "type": "n8n-nodes-base.set",
      "position": [
        840,
        620
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "content": "## Validate Telegram User\n",
        "height": 260,
        "width": 420,
        "color": 7
      },
      "id": "5bf76cb2-dd1d-49a5-969a-f87502d38616",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        780,
        560
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Webhook Status",
        "height": 240,
        "width": 460,
        "color": 7
      },
      "id": "b62b9770-11e7-41fa-99de-c3060823b8fe",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        620,
        140
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Set Webhook for Testing",
        "height": 240,
        "width": 460,
        "color": 7
      },
      "id": "4e15f8bc-52ce-4ca3-ac50-e2a42edba359",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1140,
        140
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Set Webhook for Production",
        "height": 240,
        "width": 480,
        "color": 7
      },
      "id": "55c40630-0ec6-444e-b937-8c51560f104f",
      "name": "Sticky Note9",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1660,
        140
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "operator": {
                      "type": "object",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "leftValue": "={{ $json.body.message.voice }}",
                    "rightValue": ""
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "342f0883-d959-44a2-b80d-379e39c76218",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "leftValue": "={{ $json.body.message.text }}",
                    "rightValue": ""
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "ded3a600-f861-413a-8892-3fc5ea935ecb",
                    "operator": {
                      "type": "array",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "leftValue": "={{ $json.body.message.photo }}",
                    "rightValue": ""
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "image"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "5d139092-13a3-4b2a-b490-71db63b73b68",
      "name": "Message Router",
      "type": "n8n-nodes-base.switch",
      "position": [
        1260,
        620
      ],
      "typeVersion": 3.2
    }
  ],
  "connections": {
    "Get Image": {
      "main": [
        [
          {
            "node": "Extract from File to Base64",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validation": {
      "main": [
        [
          {
            "node": "Check User & Chat ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Text Classifier",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "gpt-4o-mini": {
      "ai_languageModel": [
        [
          {
            "node": "Text Classifier Audio",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Image Schema": {
      "main": [
        [
          {
            "node": "Get Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "gpt-4o-mini1": {
      "ai_languageModel": [
        [
          {
            "node": "Text Classifier",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Analyze Image": {
      "main": [
        [
          {
            "node": "Image Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Audio File": {
      "main": [
        [
          {
            "node": "Transcribe Recording",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message Router": {
      "main": [
        [
          {
            "node": "Get Audio File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Image Schema",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text Classifier": {
      "main": [
        [
          {
            "node": "Text Task Message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Text Other Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check User & Chat ID": {
      "main": [
        [
          {
            "node": "Message Router",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Webhook Test URL": {
      "main": [
        [
          {
            "node": "Test Webhook Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe Recording": {
      "main": [
        [
          {
            "node": "Text Classifier Audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to Image File": {
      "main": [
        [
          {
            "node": "Analyze Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text Classifier Audio": {
      "main": [
        [
          {
            "node": "Audio Task Message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Audio Other Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Telegram Webhook Info": {
      "main": [
        [
          {
            "node": "Get Webhook Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Token & Webhooks": {
      "main": [
        [
          {
            "node": "Set Webhook Production URL",
            "type": "main",
            "index": 0
          },
          {
            "node": "Set Webhook Test URL",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Telegram Webhook Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Listen for Telegram Events": {
      "main": [
        [
          {
            "node": "Validation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Webhook Production URL": {
      "main": [
        [
          {
            "node": "Production Webhook Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File to Base64": {
      "main": [
        [
          {
            "node": "Convert to Image File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "cd8ff33dde04e389346982f06c7f2feed2561d3ea2af8c05544f44d32c7108d4"
  },
  "pinData": {},
  "versionId": "9772c78d-8eb2-4c26-b174-e2ed78e19988",
  "triggerCount": 0,
  "tags": [],
  "shared": [
    {
      "createdAt": "2025-10-25T12:28:46.005Z",
      "updatedAt": "2025-10-25T12:28:46.005Z",
      "role": "workflow:owner",
      "workflowId": "AevCEffvMg3JjcQC",
      "projectId": "gRDCuWZgtIsQJhnE",
      "project": {
        "createdAt": "2025-10-25T12:28:30.681Z",
        "updatedAt": "2025-10-25T12:30:12.034Z",
        "id": "gRDCuWZgtIsQJhnE",
        "name": "Leonardo Sepúlveda <lsepulvedatabares@gmail.com>",
        "type": "personal",
        "icon": null,
        "description": null
      }
    }
  ]
}